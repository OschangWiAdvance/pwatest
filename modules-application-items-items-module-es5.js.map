{"version":3,"sources":["webpack:///src/app/modules/application/items/items-routing.module.ts","webpack:///src/app/modules/application/items/items.component.ts","webpack:///src/app/modules/application/items/items.component.html","webpack:///src/app/modules/application/items/items.module.ts","webpack:///src/app/modules/application/items/items.service.ts"],"names":["routes","path","component","ItemsRoutingModule","forChild","imports","exports","STATE_KEY_ITEMS","ItemsComponent","state","itemsService","platformId","appId","items","getUsers","loaded","get","length","getItems","subscribe","platform","console","log","set","resetUsers","selector","templateUrl","styleUrls","ItemsModule","declarations","providers","httpOptions","headers","ItemsService","http","url","providedIn"],"mappings":"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","file":"modules-application-items-items-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ItemsComponent } from './items.component';\n\nconst routes: Routes = [\n  { path: '', component: ItemsComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ItemsRoutingModule { }","import { Component, OnInit } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { TransferState, makeStateKey } from '@angular/platform-browser';\nimport { PLATFORM_ID, APP_ID, Inject } from '@angular/core';\n\nimport { ItemsService } from './items.service';\n\nconst STATE_KEY_ITEMS = makeStateKey('items');\n\n@Component({\n  selector: 'app-items',\n  templateUrl: './items.component.html',\n  styleUrls: ['./items.component.css']\n})\nexport class ItemsComponent implements OnInit {\n\n  //  items: any;\n  items: any = [];\n  loaded: boolean;\n  constructor(\n    private state: TransferState,\n    private itemsService: ItemsService,\n    @Inject(PLATFORM_ID) private platformId: object,\n    @Inject(APP_ID) private appId: string) {\n\n  }\n\n  ngOnInit() {\n    this.getUsers();\n  }\n\n  getUsers() {\n    this.loaded = false;\n\n    this.items = this.state.get(STATE_KEY_ITEMS, <any> []);\n\n    if (this.items.length === 0) {\n      this.itemsService.getItems('https://jsonplaceholder.typicode.com/users')\n        .subscribe(\n          items => {\n            const platform = isPlatformBrowser(this.platformId) ?\n              'in the browser' : 'on the server';\n            console.log(`getUsers : Running ${platform} with appId=${this.appId}`);\n            this.items = items;\n            this.loaded = true;\n            this.state.set(STATE_KEY_ITEMS, <any> items);\n          });\n    } else {\n      this.loaded = true;\n    }\n  }\n\n  resetUsers() {\n    this.items = null;\n    this.loaded = true;\n  }\n\n}","<div class=\"row pb-4\">\n\n    <div class=\"col-12 col-sm-12 col-md-3 col-lg-3 col-xl-3\">\n      <div class=\"row pb-4\">\n        <div class=\"card\" style=\"width: 18rem;\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">Feature : HttpClient</h5>\n            <hr>\n            <p class=\"card-text\">Use HtppClient</p>\n            <button type=\"button\" class=\"btn btn-primary mr-4\" (click)=\"getUsers()\">Get</button>\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"resetUsers()\">Reset</button>\n          </div>\n        </div>\n        <div *ngIf=\"!loaded\">\n          <div class=\"spinner-grow text-primary\" role=\"status\">\n            <span class=\"sr-only\">Loading...</span>\n          </div>\n          <div class=\"spinner-grow text-secondary\" role=\"status\">\n            <span class=\"sr-only\">Loading...</span>\n          </div>\n          <div class=\"spinner-grow text-success\" role=\"status\">\n            <span class=\"sr-only\">Loading...</span>\n          </div>\n          <div class=\"spinner-grow text-danger\" role=\"status\">\n            <span class=\"sr-only\">Loading...</span>\n          </div>\n          <div class=\"spinner-grow text-warning\" role=\"status\">\n            <span class=\"sr-only\">Loading...</span>\n          </div>\n          <div class=\"spinner-grow text-info\" role=\"status\">\n            <span class=\"sr-only\">Loading...</span>\n          </div>\n          <div class=\"spinner-grow text-dark\" role=\"status\">\n            <span class=\"sr-only\">Loading...</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  \n    <div class=\"col-12 col-sm-12 col-md-8 col-lg-8 col-xl-8\">\n      <div class=\"row\">\n        <div class=\"table-responsive httpclient-table blue-gradient\" *ngIf=\"loaded\">\n          <table class=\"table table-hover table-striped table-responsive-md\">\n            <thead>\n              <tr>\n                <th scope=\"col\">name</th>\n                <th scope=\"col\">username</th>\n                <th scope=\"col\">email</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let item of items; let i=index\">\n                <td>{{item.name}}</td>\n                <td>{{item.username}}</td>\n                <td>{{item.email}}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  \n  </div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ItemsComponent } from './items.component';\nimport { ItemsRoutingModule } from './items-routing.module';\n// import { HttpClientModule } from '@angular/common/http';\nimport { ItemsService } from './items.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ItemsRoutingModule,\n//    HttpClientModule\n  ],\n  exports: [\n    ItemsComponent\n  ],\n  declarations: [\n    ItemsComponent\n  ],\n  providers: [ItemsService\n  ],\n})\nexport class ItemsModule { }","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nconst httpOptions = {\n  headers: new HttpHeaders(\n    {\n      'Content-Type': 'application/json',\n    }\n  )\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ItemsService {\n\n  constructor(private http: HttpClient) { }\n\n  getItems(url: string) {\n    return this.http.get(url, httpOptions);\n  }\n\n}"]}